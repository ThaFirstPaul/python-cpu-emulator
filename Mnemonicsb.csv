Instruction;Mnemonic ;Value type;Description;state3;state4;state5;state6;state7
0;NUL;;Does nothing;self.ic.state = 7;;;;
1;LDA <addr>;Memory address;Load mem[addr] to regA;"self.bus.state = addr.zfill(16);self.mem.set_ap()";"self.mem.get();self.regA.set();self.ic.state = 7";;;
10;SVA <addr>;Memory address;Stores regA to mem[addr];"self.bus.state = addr.zfill(16);self.mem.set_ap()";"self.regA.get();self.mem.set();self.ic.state = 7";;;
11;ADD <addr>;Memory address;Add mem[addr] to regA;"self.bus.state = addr.zfill(16);self.mem.set_ap();self.alu.mode ='0000'";"self.mem.get();self.alu.process();self.ic.state = 7";;;
100;SUB <addr>;Memory address;Subtract mem[addr] from regA;"self.bus.state = addr.zfill(16);self.mem.set_ap();self.alu.mode ='0001'";;;;
101;SET <num>;10-bit Number;Load [num] to regA;"self.bus.state = addr.zfill(16);self.regA.set();self.ic.state = 7";;;;
110;;;;;;;;
111;;;;;;;;
1000;JMP <addr>;Program address;Set program counter to value;"self.bus.state = addr.zfill(16);self.pc.set();self.ic.state = 7";;;;
1001;JPE <addr>;Program address;Set program counter to value if z_flag = 0;"self.bus.state = addr.zfill(16);self.pc.set() if self.z_flag.state == 1;self.ic.state = 7";;;;
1010;;;;;;;;
1011;;;;;;;;
1100;;;;;;;;
1101;;;;;;;;
1110;;;;;;;;
1111;;;;;;;;
10000;;;;;;;;
10001;LDB <addr>;Memory address;Load mem[addr] to regB;"self.bus.state = addr.zfill(16);self.mem.set_ap()";"self.mem.get();self.regB.set();self.ic.state = 7";;;
10010;SVB <addr>;Memory address;Stores regB to mem[addr];"self.bus.state = addr.zfill(16);self.mem.set_ap()";"self.regB.get();self.mem.set();self.ic.state = 7";;;
10011;;;;;;;;
10100;;;;;;;;
10101;STB <num>;10-bit Number;Load [num] to regB;"self.bus.state = addr.zfill(16);self.regB.set();self.ic.state = 7";;;;
10110;;;;;;;;
10111;;;;;;;;
11000;;;;;;;;
11001;;;;;;;;
11010;;;;;;;;
11011;;;;;;;;
11100;;;;;;;;
11101;;;;;;;;
11110;;;;;;;;
11111;;;;;;;;
100000;OTA;;Display regA to Display;"self.regA.get();self.disp.set();self.ic.state = 7";;;;
100001;OTB;;Display regB to Display;"self.regB.get();self.disp.set();self.ic.state = 7";;;;
100010;INA;;Store input from selected device to RegA;"self.inp.get();self.inp.set(""0000000000000000"");self.regA.set();self.ic.state = 7";;;;
100011;;;;;;;;
100100;;;;;;;;
100101;;;;;;;;
100110;;;;;;;;
100111;;;;;;;;
101000;;;;;;;;
101001;;;;;;;;
101010;;;;;;;;
101011;;;;;;;;
101100;;;;;;;;
101101;;;;;;;;
101110;;;;;;;;
101111;;;;;;;;
110000;;;;;;;;
110001;;;;;;;;
110010;;;;;;;;
110011;;;;;;;;
110100;;;;;;;;
110101;;;;;;;;
110110;;;;;;;;
110111;;;;;;;;
111000;;;;;;;;
111001;;;;;;;;
111010;;;;;;;;
111011;;;;;;;;
111100;;;;;;;;
111101;;;;;;;;
111110;HOL <num>;10-bit Number;Sleeps for [num] milliseconds;"time.sleep(int(addr,2)/1000);self.ic.state = 7";;;;
111111;HAL;;Halts the computer;self.running = False;;;;
